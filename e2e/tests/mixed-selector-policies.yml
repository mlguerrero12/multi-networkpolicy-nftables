---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  namespace: default
  name: macvlan1-mixed-selectors
spec:
  config: '{
            "cniVersion": "0.3.1",
            "name": "macvlan1-mixed-selectors",
            "plugins": [
                {
                    "type": "macvlan",
                    "mode": "bridge",
                    "ipam":{
                      "type":"host-local",
                      "subnet":"2.2.9.0/24",
                      "rangeStart":"2.2.9.8",
                      "rangeEnd":"2.2.9.67"
                    }
                }]
        }'
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-mixed-selectors
  labels:
    environment: production
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-mixed-selectors-blue
  labels:
    environment: staging
---
# Pods
apiVersion: v1
kind: Pod
metadata:
  name: pod-server
  namespace: test-mixed-selectors
  annotations:
    k8s.v1.cni.cncf.io/networks: default/macvlan1-mixed-selectors
  labels:
    app: test-mixed-selectors
    name: pod-server
spec:
  containers:
    - name: server
      image: localhost:5000/multus-networkpolicy-nftables-tests:e2e
      command: ["nc", "-kl", "0.0.0.0", "5555"]
      securityContext:
        privileged: true
---
# Pod in production namespace with allowed role (should be allowed by OR policy)
apiVersion: v1
kind: Pod
metadata:
  name: pod-client-a
  namespace: test-mixed-selectors
  annotations:
    k8s.v1.cni.cncf.io/networks: default/macvlan1-mixed-selectors
  labels:
    app: test-mixed-selectors
    name: pod-client-a
    role: allowed-client
spec:
  containers:
    - name: client
      image: localhost:5000/multus-networkpolicy-nftables-tests:e2e
      command: ["nc", "-kl", "0.0.0.0", "5555"]
      securityContext:
        privileged: true
---
# Pod in production namespace with blocked role (should be blocked)
apiVersion: v1
kind: Pod
metadata:
  name: pod-client-b
  namespace: test-mixed-selectors
  annotations:
    k8s.v1.cni.cncf.io/networks: default/macvlan1-mixed-selectors
  labels:
    app: test-mixed-selectors
    name: pod-client-b
    role: blocked-client
spec:
  containers:
    - name: client
      image: localhost:5000/multus-networkpolicy-nftables-tests:e2e
      command: ["nc", "-kl", "0.0.0.0", "5555"]
      securityContext:
        privileged: true
---
# Pod in staging namespace with allowed role (should be allowed by both AND and OR policies)
apiVersion: v1
kind: Pod
metadata:
  name: pod-client-c
  namespace: test-mixed-selectors-blue
  annotations:
    k8s.v1.cni.cncf.io/networks: default/macvlan1-mixed-selectors
  labels:
    app: test-mixed-selectors
    name: pod-client-c
    role: allowed-client
spec:
  containers:
    - name: client
      image: localhost:5000/multus-networkpolicy-nftables-tests:e2e
      command: ["nc", "-kl", "0.0.0.0", "5555"]
      securityContext:
        privileged: true
---
# Pod in staging namespace with blocked role (should be allowed by OR policy due to namespace)
apiVersion: v1
kind: Pod
metadata:
  name: pod-client-d
  namespace: test-mixed-selectors-blue
  annotations:
    k8s.v1.cni.cncf.io/networks: default/macvlan1-mixed-selectors
  labels:
    app: test-mixed-selectors
    name: pod-client-d
    role: blocked-client
spec:
  containers:
    - name: client
      image: localhost:5000/multus-networkpolicy-nftables-tests:e2e
      command: ["nc", "-kl", "0.0.0.0", "5555"]
      securityContext:
        privileged: true
---
# Pod in staging namespace with different role (should be allowed by OR policy due to namespace)
apiVersion: v1
kind: Pod
metadata:
  name: pod-client-e
  namespace: test-mixed-selectors-blue
  annotations:
    k8s.v1.cni.cncf.io/networks: default/macvlan1-mixed-selectors
  labels:
    app: test-mixed-selectors
    name: pod-client-e
    role: other-client
spec:
  containers:
    - name: client
      image: localhost:5000/multus-networkpolicy-nftables-tests:e2e
      command: ["nc", "-kl", "0.0.0.0", "5555"]
      securityContext:
        privileged: true
---
# MultiNetworkPolicies
# Policy 1: Mixed selector (AND condition) - pods with role=allowed-client in environment=staging namespace
apiVersion: k8s.cni.cncf.io/v1beta1
kind: MultiNetworkPolicy
metadata:
  name: mixed-selector-ingress-policy
  namespace: test-mixed-selectors
  annotations:
    k8s.v1.cni.cncf.io/policy-for: default/macvlan1-mixed-selectors
spec:
  podSelector:
    matchLabels:
      name: pod-server
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              environment: staging
          podSelector:
            matchLabels:
              role: allowed-client
      ports:
        - port: 5555
          protocol: TCP
---
# Policy 2: OR condition - pods with role=allowed-client OR pods in environment=staging namespace
apiVersion: k8s.cni.cncf.io/v1beta1
kind: MultiNetworkPolicy
metadata:
  name: or-selector-ingress-policy
  namespace: test-mixed-selectors
  annotations:
    k8s.v1.cni.cncf.io/policy-for: default/macvlan1-mixed-selectors
spec:
  podSelector:
    matchLabels:
      name: pod-server
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: allowed-client
        - namespaceSelector:
            matchLabels:
              environment: staging
      ports:
        - port: 5555
          protocol: TCP
---
# Egress Policy: Mixed selector (AND condition)
apiVersion: k8s.cni.cncf.io/v1beta1
kind: MultiNetworkPolicy
metadata:
  name: mixed-selector-egress-policy
  namespace: test-mixed-selectors
  annotations:
    k8s.v1.cni.cncf.io/policy-for: default/macvlan1-mixed-selectors
spec:
  podSelector:
    matchLabels:
      name: pod-server
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              environment: staging
          podSelector:
            matchLabels:
              role: allowed-client
      ports:
        - port: 5555
          protocol: TCP
